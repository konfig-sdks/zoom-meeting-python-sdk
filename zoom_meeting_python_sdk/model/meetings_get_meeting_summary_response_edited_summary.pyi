# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom. 

    The version of the OpenAPI document: 2
    Created by: https://developer.zoom.us/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from zoom_meeting_python_sdk import schemas  # noqa: F401


class MeetingsGetMeetingSummaryResponseEditedSummary(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            summary_details = schemas.StrSchema
        
            @staticmethod
            def next_steps() -> typing.Type['MeetingsGetMeetingSummaryResponseEditedSummaryNextSteps']:
                return MeetingsGetMeetingSummaryResponseEditedSummaryNextSteps
            __annotations__ = {
                "summary_details": summary_details,
                "next_steps": next_steps,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["summary_details"]) -> MetaOapg.properties.summary_details: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["next_steps"]) -> 'MeetingsGetMeetingSummaryResponseEditedSummaryNextSteps': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["summary_details", "next_steps", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["summary_details"]) -> typing.Union[MetaOapg.properties.summary_details, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["next_steps"]) -> typing.Union['MeetingsGetMeetingSummaryResponseEditedSummaryNextSteps', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["summary_details", "next_steps", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        summary_details: typing.Union[MetaOapg.properties.summary_details, str, schemas.Unset] = schemas.unset,
        next_steps: typing.Union['MeetingsGetMeetingSummaryResponseEditedSummaryNextSteps', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MeetingsGetMeetingSummaryResponseEditedSummary':
        return super().__new__(
            cls,
            *args,
            summary_details=summary_details,
            next_steps=next_steps,
            _configuration=_configuration,
            **kwargs,
        )

from zoom_meeting_python_sdk.model.meetings_get_meeting_summary_response_edited_summary_next_steps import MeetingsGetMeetingSummaryResponseEditedSummaryNextSteps
