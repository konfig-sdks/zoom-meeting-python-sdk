# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom. 

    The version of the OpenAPI document: 2
    Created by: https://developer.zoom.us/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from zoom_meeting_python_sdk import schemas  # noqa: F401


class ReportsGetWebinarDetailsReportResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def custom_keys() -> typing.Type['ReportsGetWebinarDetailsReportResponseCustomKeys']:
                return ReportsGetWebinarDetailsReportResponseCustomKeys
            dept = schemas.StrSchema
            duration = schemas.IntSchema
            end_time = schemas.DateTimeSchema
            id = schemas.Int64Schema
            participants_count = schemas.IntSchema
            start_time = schemas.DateTimeSchema
            topic = schemas.StrSchema
            total_minutes = schemas.IntSchema
        
            @staticmethod
            def tracking_fields() -> typing.Type['ReportsGetWebinarDetailsReportResponseTrackingFields']:
                return ReportsGetWebinarDetailsReportResponseTrackingFields
            type = schemas.IntSchema
            user_email = schemas.StrSchema
            user_name = schemas.StrSchema
            uuid = schemas.StrSchema
            __annotations__ = {
                "custom_keys": custom_keys,
                "dept": dept,
                "duration": duration,
                "end_time": end_time,
                "id": id,
                "participants_count": participants_count,
                "start_time": start_time,
                "topic": topic,
                "total_minutes": total_minutes,
                "tracking_fields": tracking_fields,
                "type": type,
                "user_email": user_email,
                "user_name": user_name,
                "uuid": uuid,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_keys"]) -> 'ReportsGetWebinarDetailsReportResponseCustomKeys': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dept"]) -> MetaOapg.properties.dept: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["duration"]) -> MetaOapg.properties.duration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["end_time"]) -> MetaOapg.properties.end_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["participants_count"]) -> MetaOapg.properties.participants_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["start_time"]) -> MetaOapg.properties.start_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["topic"]) -> MetaOapg.properties.topic: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_minutes"]) -> MetaOapg.properties.total_minutes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tracking_fields"]) -> 'ReportsGetWebinarDetailsReportResponseTrackingFields': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_email"]) -> MetaOapg.properties.user_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_name"]) -> MetaOapg.properties.user_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uuid"]) -> MetaOapg.properties.uuid: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["custom_keys", "dept", "duration", "end_time", "id", "participants_count", "start_time", "topic", "total_minutes", "tracking_fields", "type", "user_email", "user_name", "uuid", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_keys"]) -> typing.Union['ReportsGetWebinarDetailsReportResponseCustomKeys', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dept"]) -> typing.Union[MetaOapg.properties.dept, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["duration"]) -> typing.Union[MetaOapg.properties.duration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["end_time"]) -> typing.Union[MetaOapg.properties.end_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["participants_count"]) -> typing.Union[MetaOapg.properties.participants_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["start_time"]) -> typing.Union[MetaOapg.properties.start_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["topic"]) -> typing.Union[MetaOapg.properties.topic, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_minutes"]) -> typing.Union[MetaOapg.properties.total_minutes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tracking_fields"]) -> typing.Union['ReportsGetWebinarDetailsReportResponseTrackingFields', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> typing.Union[MetaOapg.properties.type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_email"]) -> typing.Union[MetaOapg.properties.user_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_name"]) -> typing.Union[MetaOapg.properties.user_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uuid"]) -> typing.Union[MetaOapg.properties.uuid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["custom_keys", "dept", "duration", "end_time", "id", "participants_count", "start_time", "topic", "total_minutes", "tracking_fields", "type", "user_email", "user_name", "uuid", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        custom_keys: typing.Union['ReportsGetWebinarDetailsReportResponseCustomKeys', schemas.Unset] = schemas.unset,
        dept: typing.Union[MetaOapg.properties.dept, str, schemas.Unset] = schemas.unset,
        duration: typing.Union[MetaOapg.properties.duration, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        end_time: typing.Union[MetaOapg.properties.end_time, str, datetime, schemas.Unset] = schemas.unset,
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        participants_count: typing.Union[MetaOapg.properties.participants_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        start_time: typing.Union[MetaOapg.properties.start_time, str, datetime, schemas.Unset] = schemas.unset,
        topic: typing.Union[MetaOapg.properties.topic, str, schemas.Unset] = schemas.unset,
        total_minutes: typing.Union[MetaOapg.properties.total_minutes, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        tracking_fields: typing.Union['ReportsGetWebinarDetailsReportResponseTrackingFields', schemas.Unset] = schemas.unset,
        type: typing.Union[MetaOapg.properties.type, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        user_email: typing.Union[MetaOapg.properties.user_email, str, schemas.Unset] = schemas.unset,
        user_name: typing.Union[MetaOapg.properties.user_name, str, schemas.Unset] = schemas.unset,
        uuid: typing.Union[MetaOapg.properties.uuid, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ReportsGetWebinarDetailsReportResponse':
        return super().__new__(
            cls,
            *args,
            custom_keys=custom_keys,
            dept=dept,
            duration=duration,
            end_time=end_time,
            id=id,
            participants_count=participants_count,
            start_time=start_time,
            topic=topic,
            total_minutes=total_minutes,
            tracking_fields=tracking_fields,
            type=type,
            user_email=user_email,
            user_name=user_name,
            uuid=uuid,
            _configuration=_configuration,
            **kwargs,
        )

from zoom_meeting_python_sdk.model.reports_get_webinar_details_report_response_custom_keys import ReportsGetWebinarDetailsReportResponseCustomKeys
from zoom_meeting_python_sdk.model.reports_get_webinar_details_report_response_tracking_fields import ReportsGetWebinarDetailsReportResponseTrackingFields
