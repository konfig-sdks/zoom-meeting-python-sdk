# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom. 

    The version of the OpenAPI document: 2
    Created by: https://developer.zoom.us/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from zoom_meeting_python_sdk import schemas  # noqa: F401


class ArchivingMeetingFilesListResponseMeetingsItemArchiveFilesItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "participant_leave_time",
            "individual",
            "encryption_fingerprint",
            "file_type",
            "recording_type",
            "download_url",
            "file_extension",
            "participant_join_time",
            "id",
            "file_size",
            "status",
        }
        
        class properties:
            download_url = schemas.StrSchema
            file_extension = schemas.StrSchema
            file_size = schemas.IntSchema
            
            
            class file_type(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def MP4(cls):
                    return cls("MP4")
                
                @schemas.classproperty
                def M4A(cls):
                    return cls("M4A")
                
                @schemas.classproperty
                def CHAT(cls):
                    return cls("CHAT")
                
                @schemas.classproperty
                def CC(cls):
                    return cls("CC")
                
                @schemas.classproperty
                def CHAT_MESSAGE(cls):
                    return cls("CHAT_MESSAGE")
            id = schemas.StrSchema
            individual = schemas.BoolSchema
            participant_join_time = schemas.DateTimeSchema
            participant_leave_time = schemas.DateTimeSchema
            
            
            class recording_type(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def SHARED_SCREEN_WITH_SPEAKER_VIEW(cls):
                    return cls("shared_screen_with_speaker_view")
                
                @schemas.classproperty
                def AUDIO_ONLY(cls):
                    return cls("audio_only")
                
                @schemas.classproperty
                def CHAT_FILE(cls):
                    return cls("chat_file")
                
                @schemas.classproperty
                def CLOSED_CAPTION(cls):
                    return cls("closed_caption")
                
                @schemas.classproperty
                def CHAT_MESSAGE(cls):
                    return cls("chat_message")
            
            
            class status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def COMPLETED(cls):
                    return cls("completed")
                
                @schemas.classproperty
                def PROCESSING(cls):
                    return cls("processing")
                
                @schemas.classproperty
                def FAILED(cls):
                    return cls("failed")
            encryption_fingerprint = schemas.StrSchema
            file_path = schemas.StrSchema
            participant_email = schemas.StrSchema
            number_of_messages = schemas.IntSchema
            
            
            class storage_location(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def US(cls):
                    return cls("US")
                
                @schemas.classproperty
                def AU(cls):
                    return cls("AU")
                
                @schemas.classproperty
                def BR(cls):
                    return cls("BR")
                
                @schemas.classproperty
                def CA(cls):
                    return cls("CA")
                
                @schemas.classproperty
                def EU(cls):
                    return cls("EU")
                
                @schemas.classproperty
                def IN(cls):
                    return cls("IN")
                
                @schemas.classproperty
                def JP(cls):
                    return cls("JP")
                
                @schemas.classproperty
                def SG(cls):
                    return cls("SG")
                
                @schemas.classproperty
                def CH(cls):
                    return cls("CH")
            auto_delete = schemas.BoolSchema
            __annotations__ = {
                "download_url": download_url,
                "file_extension": file_extension,
                "file_size": file_size,
                "file_type": file_type,
                "id": id,
                "individual": individual,
                "participant_join_time": participant_join_time,
                "participant_leave_time": participant_leave_time,
                "recording_type": recording_type,
                "status": status,
                "encryption_fingerprint": encryption_fingerprint,
                "file_path": file_path,
                "participant_email": participant_email,
                "number_of_messages": number_of_messages,
                "storage_location": storage_location,
                "auto_delete": auto_delete,
            }
    
    participant_leave_time: MetaOapg.properties.participant_leave_time
    individual: MetaOapg.properties.individual
    encryption_fingerprint: MetaOapg.properties.encryption_fingerprint
    file_type: MetaOapg.properties.file_type
    recording_type: MetaOapg.properties.recording_type
    download_url: MetaOapg.properties.download_url
    file_extension: MetaOapg.properties.file_extension
    participant_join_time: MetaOapg.properties.participant_join_time
    id: MetaOapg.properties.id
    file_size: MetaOapg.properties.file_size
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["download_url"]) -> MetaOapg.properties.download_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["file_extension"]) -> MetaOapg.properties.file_extension: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["file_size"]) -> MetaOapg.properties.file_size: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["file_type"]) -> MetaOapg.properties.file_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["individual"]) -> MetaOapg.properties.individual: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["participant_join_time"]) -> MetaOapg.properties.participant_join_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["participant_leave_time"]) -> MetaOapg.properties.participant_leave_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recording_type"]) -> MetaOapg.properties.recording_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["encryption_fingerprint"]) -> MetaOapg.properties.encryption_fingerprint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["file_path"]) -> MetaOapg.properties.file_path: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["participant_email"]) -> MetaOapg.properties.participant_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["number_of_messages"]) -> MetaOapg.properties.number_of_messages: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["storage_location"]) -> MetaOapg.properties.storage_location: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_delete"]) -> MetaOapg.properties.auto_delete: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["download_url", "file_extension", "file_size", "file_type", "id", "individual", "participant_join_time", "participant_leave_time", "recording_type", "status", "encryption_fingerprint", "file_path", "participant_email", "number_of_messages", "storage_location", "auto_delete", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["download_url"]) -> MetaOapg.properties.download_url: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["file_extension"]) -> MetaOapg.properties.file_extension: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["file_size"]) -> MetaOapg.properties.file_size: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["file_type"]) -> MetaOapg.properties.file_type: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["individual"]) -> MetaOapg.properties.individual: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["participant_join_time"]) -> MetaOapg.properties.participant_join_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["participant_leave_time"]) -> MetaOapg.properties.participant_leave_time: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recording_type"]) -> MetaOapg.properties.recording_type: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["encryption_fingerprint"]) -> MetaOapg.properties.encryption_fingerprint: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["file_path"]) -> typing.Union[MetaOapg.properties.file_path, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["participant_email"]) -> typing.Union[MetaOapg.properties.participant_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["number_of_messages"]) -> typing.Union[MetaOapg.properties.number_of_messages, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["storage_location"]) -> typing.Union[MetaOapg.properties.storage_location, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_delete"]) -> typing.Union[MetaOapg.properties.auto_delete, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["download_url", "file_extension", "file_size", "file_type", "id", "individual", "participant_join_time", "participant_leave_time", "recording_type", "status", "encryption_fingerprint", "file_path", "participant_email", "number_of_messages", "storage_location", "auto_delete", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        participant_leave_time: typing.Union[MetaOapg.properties.participant_leave_time, str, datetime, ],
        individual: typing.Union[MetaOapg.properties.individual, bool, ],
        encryption_fingerprint: typing.Union[MetaOapg.properties.encryption_fingerprint, str, ],
        file_type: typing.Union[MetaOapg.properties.file_type, str, ],
        recording_type: typing.Union[MetaOapg.properties.recording_type, str, ],
        download_url: typing.Union[MetaOapg.properties.download_url, str, ],
        file_extension: typing.Union[MetaOapg.properties.file_extension, str, ],
        participant_join_time: typing.Union[MetaOapg.properties.participant_join_time, str, datetime, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        file_size: typing.Union[MetaOapg.properties.file_size, decimal.Decimal, int, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        file_path: typing.Union[MetaOapg.properties.file_path, str, schemas.Unset] = schemas.unset,
        participant_email: typing.Union[MetaOapg.properties.participant_email, str, schemas.Unset] = schemas.unset,
        number_of_messages: typing.Union[MetaOapg.properties.number_of_messages, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        storage_location: typing.Union[MetaOapg.properties.storage_location, str, schemas.Unset] = schemas.unset,
        auto_delete: typing.Union[MetaOapg.properties.auto_delete, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ArchivingMeetingFilesListResponseMeetingsItemArchiveFilesItem':
        return super().__new__(
            cls,
            *args,
            participant_leave_time=participant_leave_time,
            individual=individual,
            encryption_fingerprint=encryption_fingerprint,
            file_type=file_type,
            recording_type=recording_type,
            download_url=download_url,
            file_extension=file_extension,
            participant_join_time=participant_join_time,
            id=id,
            file_size=file_size,
            status=status,
            file_path=file_path,
            participant_email=participant_email,
            number_of_messages=number_of_messages,
            storage_location=storage_location,
            auto_delete=auto_delete,
            _configuration=_configuration,
            **kwargs,
        )
