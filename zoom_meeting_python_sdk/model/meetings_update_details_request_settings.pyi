# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom. 

    The version of the OpenAPI document: 2
    Created by: https://developer.zoom.us/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from zoom_meeting_python_sdk import schemas  # noqa: F401


class MeetingsUpdateDetailsRequestSettings(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Meeting settings.
    """


    class MetaOapg:
        
        class properties:
            allow_multiple_devices = schemas.BoolSchema
            alternative_hosts = schemas.StrSchema
            alternative_hosts_email_notification = schemas.BoolSchema
            alternative_host_update_polls = schemas.BoolSchema
            
            
            class approval_type(
                schemas.EnumBase,
                schemas.IntSchema
            ):
                
                @schemas.classproperty
                def POSITIVE_0(cls):
                    return cls(0)
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls(1)
                
                @schemas.classproperty
                def POSITIVE_2(cls):
                    return cls(2)
        
            @staticmethod
            def approved_or_denied_countries_or_regions() -> typing.Type['MeetingsUpdateDetailsRequestSettingsApprovedOrDeniedCountriesOrRegions']:
                return MeetingsUpdateDetailsRequestSettingsApprovedOrDeniedCountriesOrRegions
            
            
            class audio(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def BOTH(cls):
                    return cls("both")
                
                @schemas.classproperty
                def TELEPHONY(cls):
                    return cls("telephony")
                
                @schemas.classproperty
                def VOIP(cls):
                    return cls("voip")
                
                @schemas.classproperty
                def THIRD_PARTY(cls):
                    return cls("thirdParty")
            
            
            class audio_conference_info(
                schemas.StrSchema
            ):
                pass
            authentication_domains = schemas.StrSchema
        
            @staticmethod
            def authentication_exception() -> typing.Type['MeetingsUpdateDetailsRequestSettingsAuthenticationException']:
                return MeetingsUpdateDetailsRequestSettingsAuthenticationException
            authentication_name = schemas.StrSchema
            authentication_option = schemas.StrSchema
            
            
            class auto_recording(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def LOCAL(cls):
                    return cls("local")
                
                @schemas.classproperty
                def CLOUD(cls):
                    return cls("cloud")
                
                @schemas.classproperty
                def NONE(cls):
                    return cls("none")
        
            @staticmethod
            def breakout_room() -> typing.Type['MeetingsUpdateDetailsRequestSettingsBreakoutRoom']:
                return MeetingsUpdateDetailsRequestSettingsBreakoutRoom
            
            
            class calendar_type(
                schemas.EnumBase,
                schemas.IntSchema
            ):
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls(1)
                
                @schemas.classproperty
                def POSITIVE_2(cls):
                    return cls(2)
            close_registration = schemas.BoolSchema
            cn_meeting = schemas.BoolSchema
            contact_email = schemas.StrSchema
            contact_name = schemas.StrSchema
        
            @staticmethod
            def custom_keys() -> typing.Type['MeetingsUpdateDetailsRequestSettingsCustomKeys']:
                return MeetingsUpdateDetailsRequestSettingsCustomKeys
            email_notification = schemas.BoolSchema
            
            
            class encryption_type(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def ENHANCED_ENCRYPTION(cls):
                    return cls("enhanced_encryption")
                
                @schemas.classproperty
                def E2EE(cls):
                    return cls("e2ee")
            enforce_login = schemas.BoolSchema
            enforce_login_domains = schemas.StrSchema
            focus_mode = schemas.BoolSchema
        
            @staticmethod
            def global_dial_in_countries() -> typing.Type['MeetingsUpdateDetailsRequestSettingsGlobalDialInCountries']:
                return MeetingsUpdateDetailsRequestSettingsGlobalDialInCountries
        
            @staticmethod
            def global_dial_in_numbers() -> typing.Type['MeetingsUpdateDetailsRequestSettingsGlobalDialInNumbers']:
                return MeetingsUpdateDetailsRequestSettingsGlobalDialInNumbers
            host_video = schemas.BoolSchema
            in_meeting = schemas.BoolSchema
            
            
            class jbh_time(
                schemas.EnumBase,
                schemas.IntSchema
            ):
                
                @schemas.classproperty
                def POSITIVE_0(cls):
                    return cls(0)
                
                @schemas.classproperty
                def POSITIVE_5(cls):
                    return cls(5)
                
                @schemas.classproperty
                def POSITIVE_10(cls):
                    return cls(10)
            join_before_host = schemas.BoolSchema
        
            @staticmethod
            def language_interpretation() -> typing.Type['MeetingsUpdateDetailsRequestSettingsLanguageInterpretation']:
                return MeetingsUpdateDetailsRequestSettingsLanguageInterpretation
        
            @staticmethod
            def sign_language_interpretation() -> typing.Type['MeetingsUpdateDetailsRequestSettingsSignLanguageInterpretation']:
                return MeetingsUpdateDetailsRequestSettingsSignLanguageInterpretation
            meeting_authentication = schemas.BoolSchema
        
            @staticmethod
            def meeting_invitees() -> typing.Type['MeetingsUpdateDetailsRequestSettingsMeetingInvitees']:
                return MeetingsUpdateDetailsRequestSettingsMeetingInvitees
            mute_upon_entry = schemas.BoolSchema
            participant_video = schemas.BoolSchema
            private_meeting = schemas.BoolSchema
            registrants_confirmation_email = schemas.BoolSchema
            registrants_email_notification = schemas.BoolSchema
            
            
            class registration_type(
                schemas.EnumBase,
                schemas.IntSchema
            ):
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls(1)
                
                @schemas.classproperty
                def POSITIVE_2(cls):
                    return cls(2)
                
                @schemas.classproperty
                def POSITIVE_3(cls):
                    return cls(3)
            show_share_button = schemas.BoolSchema
            use_pmi = schemas.BoolSchema
            waiting_room = schemas.BoolSchema
            watermark = schemas.BoolSchema
            host_save_video_order = schemas.BoolSchema
            internal_meeting = schemas.BoolSchema
        
            @staticmethod
            def continuous_meeting_chat() -> typing.Type['MeetingsUpdateDetailsRequestSettingsContinuousMeetingChat']:
                return MeetingsUpdateDetailsRequestSettingsContinuousMeetingChat
            participant_focused_meeting = schemas.BoolSchema
        
            @staticmethod
            def resources() -> typing.Type['MeetingsUpdateDetailsRequestSettingsResources']:
                return MeetingsUpdateDetailsRequestSettingsResources
            auto_start_meeting_summary = schemas.BoolSchema
            auto_start_ai_companion_questions = schemas.BoolSchema
            __annotations__ = {
                "allow_multiple_devices": allow_multiple_devices,
                "alternative_hosts": alternative_hosts,
                "alternative_hosts_email_notification": alternative_hosts_email_notification,
                "alternative_host_update_polls": alternative_host_update_polls,
                "approval_type": approval_type,
                "approved_or_denied_countries_or_regions": approved_or_denied_countries_or_regions,
                "audio": audio,
                "audio_conference_info": audio_conference_info,
                "authentication_domains": authentication_domains,
                "authentication_exception": authentication_exception,
                "authentication_name": authentication_name,
                "authentication_option": authentication_option,
                "auto_recording": auto_recording,
                "breakout_room": breakout_room,
                "calendar_type": calendar_type,
                "close_registration": close_registration,
                "cn_meeting": cn_meeting,
                "contact_email": contact_email,
                "contact_name": contact_name,
                "custom_keys": custom_keys,
                "email_notification": email_notification,
                "encryption_type": encryption_type,
                "enforce_login": enforce_login,
                "enforce_login_domains": enforce_login_domains,
                "focus_mode": focus_mode,
                "global_dial_in_countries": global_dial_in_countries,
                "global_dial_in_numbers": global_dial_in_numbers,
                "host_video": host_video,
                "in_meeting": in_meeting,
                "jbh_time": jbh_time,
                "join_before_host": join_before_host,
                "language_interpretation": language_interpretation,
                "sign_language_interpretation": sign_language_interpretation,
                "meeting_authentication": meeting_authentication,
                "meeting_invitees": meeting_invitees,
                "mute_upon_entry": mute_upon_entry,
                "participant_video": participant_video,
                "private_meeting": private_meeting,
                "registrants_confirmation_email": registrants_confirmation_email,
                "registrants_email_notification": registrants_email_notification,
                "registration_type": registration_type,
                "show_share_button": show_share_button,
                "use_pmi": use_pmi,
                "waiting_room": waiting_room,
                "watermark": watermark,
                "host_save_video_order": host_save_video_order,
                "internal_meeting": internal_meeting,
                "continuous_meeting_chat": continuous_meeting_chat,
                "participant_focused_meeting": participant_focused_meeting,
                "resources": resources,
                "auto_start_meeting_summary": auto_start_meeting_summary,
                "auto_start_ai_companion_questions": auto_start_ai_companion_questions,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allow_multiple_devices"]) -> MetaOapg.properties.allow_multiple_devices: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["alternative_hosts"]) -> MetaOapg.properties.alternative_hosts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["alternative_hosts_email_notification"]) -> MetaOapg.properties.alternative_hosts_email_notification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["alternative_host_update_polls"]) -> MetaOapg.properties.alternative_host_update_polls: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["approval_type"]) -> MetaOapg.properties.approval_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["approved_or_denied_countries_or_regions"]) -> 'MeetingsUpdateDetailsRequestSettingsApprovedOrDeniedCountriesOrRegions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audio"]) -> MetaOapg.properties.audio: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audio_conference_info"]) -> MetaOapg.properties.audio_conference_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authentication_domains"]) -> MetaOapg.properties.authentication_domains: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authentication_exception"]) -> 'MeetingsUpdateDetailsRequestSettingsAuthenticationException': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authentication_name"]) -> MetaOapg.properties.authentication_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authentication_option"]) -> MetaOapg.properties.authentication_option: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_recording"]) -> MetaOapg.properties.auto_recording: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["breakout_room"]) -> 'MeetingsUpdateDetailsRequestSettingsBreakoutRoom': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calendar_type"]) -> MetaOapg.properties.calendar_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["close_registration"]) -> MetaOapg.properties.close_registration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cn_meeting"]) -> MetaOapg.properties.cn_meeting: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contact_email"]) -> MetaOapg.properties.contact_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contact_name"]) -> MetaOapg.properties.contact_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_keys"]) -> 'MeetingsUpdateDetailsRequestSettingsCustomKeys': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email_notification"]) -> MetaOapg.properties.email_notification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["encryption_type"]) -> MetaOapg.properties.encryption_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enforce_login"]) -> MetaOapg.properties.enforce_login: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enforce_login_domains"]) -> MetaOapg.properties.enforce_login_domains: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["focus_mode"]) -> MetaOapg.properties.focus_mode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["global_dial_in_countries"]) -> 'MeetingsUpdateDetailsRequestSettingsGlobalDialInCountries': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["global_dial_in_numbers"]) -> 'MeetingsUpdateDetailsRequestSettingsGlobalDialInNumbers': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["host_video"]) -> MetaOapg.properties.host_video: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["in_meeting"]) -> MetaOapg.properties.in_meeting: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jbh_time"]) -> MetaOapg.properties.jbh_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["join_before_host"]) -> MetaOapg.properties.join_before_host: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["language_interpretation"]) -> 'MeetingsUpdateDetailsRequestSettingsLanguageInterpretation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sign_language_interpretation"]) -> 'MeetingsUpdateDetailsRequestSettingsSignLanguageInterpretation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["meeting_authentication"]) -> MetaOapg.properties.meeting_authentication: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["meeting_invitees"]) -> 'MeetingsUpdateDetailsRequestSettingsMeetingInvitees': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mute_upon_entry"]) -> MetaOapg.properties.mute_upon_entry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["participant_video"]) -> MetaOapg.properties.participant_video: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["private_meeting"]) -> MetaOapg.properties.private_meeting: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["registrants_confirmation_email"]) -> MetaOapg.properties.registrants_confirmation_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["registrants_email_notification"]) -> MetaOapg.properties.registrants_email_notification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["registration_type"]) -> MetaOapg.properties.registration_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["show_share_button"]) -> MetaOapg.properties.show_share_button: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["use_pmi"]) -> MetaOapg.properties.use_pmi: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["waiting_room"]) -> MetaOapg.properties.waiting_room: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["watermark"]) -> MetaOapg.properties.watermark: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["host_save_video_order"]) -> MetaOapg.properties.host_save_video_order: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["internal_meeting"]) -> MetaOapg.properties.internal_meeting: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["continuous_meeting_chat"]) -> 'MeetingsUpdateDetailsRequestSettingsContinuousMeetingChat': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["participant_focused_meeting"]) -> MetaOapg.properties.participant_focused_meeting: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resources"]) -> 'MeetingsUpdateDetailsRequestSettingsResources': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_start_meeting_summary"]) -> MetaOapg.properties.auto_start_meeting_summary: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_start_ai_companion_questions"]) -> MetaOapg.properties.auto_start_ai_companion_questions: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["allow_multiple_devices", "alternative_hosts", "alternative_hosts_email_notification", "alternative_host_update_polls", "approval_type", "approved_or_denied_countries_or_regions", "audio", "audio_conference_info", "authentication_domains", "authentication_exception", "authentication_name", "authentication_option", "auto_recording", "breakout_room", "calendar_type", "close_registration", "cn_meeting", "contact_email", "contact_name", "custom_keys", "email_notification", "encryption_type", "enforce_login", "enforce_login_domains", "focus_mode", "global_dial_in_countries", "global_dial_in_numbers", "host_video", "in_meeting", "jbh_time", "join_before_host", "language_interpretation", "sign_language_interpretation", "meeting_authentication", "meeting_invitees", "mute_upon_entry", "participant_video", "private_meeting", "registrants_confirmation_email", "registrants_email_notification", "registration_type", "show_share_button", "use_pmi", "waiting_room", "watermark", "host_save_video_order", "internal_meeting", "continuous_meeting_chat", "participant_focused_meeting", "resources", "auto_start_meeting_summary", "auto_start_ai_companion_questions", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allow_multiple_devices"]) -> typing.Union[MetaOapg.properties.allow_multiple_devices, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["alternative_hosts"]) -> typing.Union[MetaOapg.properties.alternative_hosts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["alternative_hosts_email_notification"]) -> typing.Union[MetaOapg.properties.alternative_hosts_email_notification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["alternative_host_update_polls"]) -> typing.Union[MetaOapg.properties.alternative_host_update_polls, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["approval_type"]) -> typing.Union[MetaOapg.properties.approval_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["approved_or_denied_countries_or_regions"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsApprovedOrDeniedCountriesOrRegions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audio"]) -> typing.Union[MetaOapg.properties.audio, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audio_conference_info"]) -> typing.Union[MetaOapg.properties.audio_conference_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authentication_domains"]) -> typing.Union[MetaOapg.properties.authentication_domains, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authentication_exception"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsAuthenticationException', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authentication_name"]) -> typing.Union[MetaOapg.properties.authentication_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authentication_option"]) -> typing.Union[MetaOapg.properties.authentication_option, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_recording"]) -> typing.Union[MetaOapg.properties.auto_recording, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["breakout_room"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsBreakoutRoom', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calendar_type"]) -> typing.Union[MetaOapg.properties.calendar_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["close_registration"]) -> typing.Union[MetaOapg.properties.close_registration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cn_meeting"]) -> typing.Union[MetaOapg.properties.cn_meeting, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contact_email"]) -> typing.Union[MetaOapg.properties.contact_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contact_name"]) -> typing.Union[MetaOapg.properties.contact_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_keys"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsCustomKeys', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email_notification"]) -> typing.Union[MetaOapg.properties.email_notification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["encryption_type"]) -> typing.Union[MetaOapg.properties.encryption_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enforce_login"]) -> typing.Union[MetaOapg.properties.enforce_login, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enforce_login_domains"]) -> typing.Union[MetaOapg.properties.enforce_login_domains, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["focus_mode"]) -> typing.Union[MetaOapg.properties.focus_mode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["global_dial_in_countries"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsGlobalDialInCountries', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["global_dial_in_numbers"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsGlobalDialInNumbers', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["host_video"]) -> typing.Union[MetaOapg.properties.host_video, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["in_meeting"]) -> typing.Union[MetaOapg.properties.in_meeting, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jbh_time"]) -> typing.Union[MetaOapg.properties.jbh_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["join_before_host"]) -> typing.Union[MetaOapg.properties.join_before_host, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["language_interpretation"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsLanguageInterpretation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sign_language_interpretation"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsSignLanguageInterpretation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["meeting_authentication"]) -> typing.Union[MetaOapg.properties.meeting_authentication, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["meeting_invitees"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsMeetingInvitees', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mute_upon_entry"]) -> typing.Union[MetaOapg.properties.mute_upon_entry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["participant_video"]) -> typing.Union[MetaOapg.properties.participant_video, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["private_meeting"]) -> typing.Union[MetaOapg.properties.private_meeting, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["registrants_confirmation_email"]) -> typing.Union[MetaOapg.properties.registrants_confirmation_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["registrants_email_notification"]) -> typing.Union[MetaOapg.properties.registrants_email_notification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["registration_type"]) -> typing.Union[MetaOapg.properties.registration_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["show_share_button"]) -> typing.Union[MetaOapg.properties.show_share_button, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["use_pmi"]) -> typing.Union[MetaOapg.properties.use_pmi, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["waiting_room"]) -> typing.Union[MetaOapg.properties.waiting_room, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["watermark"]) -> typing.Union[MetaOapg.properties.watermark, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["host_save_video_order"]) -> typing.Union[MetaOapg.properties.host_save_video_order, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["internal_meeting"]) -> typing.Union[MetaOapg.properties.internal_meeting, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["continuous_meeting_chat"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsContinuousMeetingChat', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["participant_focused_meeting"]) -> typing.Union[MetaOapg.properties.participant_focused_meeting, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resources"]) -> typing.Union['MeetingsUpdateDetailsRequestSettingsResources', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_start_meeting_summary"]) -> typing.Union[MetaOapg.properties.auto_start_meeting_summary, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_start_ai_companion_questions"]) -> typing.Union[MetaOapg.properties.auto_start_ai_companion_questions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["allow_multiple_devices", "alternative_hosts", "alternative_hosts_email_notification", "alternative_host_update_polls", "approval_type", "approved_or_denied_countries_or_regions", "audio", "audio_conference_info", "authentication_domains", "authentication_exception", "authentication_name", "authentication_option", "auto_recording", "breakout_room", "calendar_type", "close_registration", "cn_meeting", "contact_email", "contact_name", "custom_keys", "email_notification", "encryption_type", "enforce_login", "enforce_login_domains", "focus_mode", "global_dial_in_countries", "global_dial_in_numbers", "host_video", "in_meeting", "jbh_time", "join_before_host", "language_interpretation", "sign_language_interpretation", "meeting_authentication", "meeting_invitees", "mute_upon_entry", "participant_video", "private_meeting", "registrants_confirmation_email", "registrants_email_notification", "registration_type", "show_share_button", "use_pmi", "waiting_room", "watermark", "host_save_video_order", "internal_meeting", "continuous_meeting_chat", "participant_focused_meeting", "resources", "auto_start_meeting_summary", "auto_start_ai_companion_questions", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        allow_multiple_devices: typing.Union[MetaOapg.properties.allow_multiple_devices, bool, schemas.Unset] = schemas.unset,
        alternative_hosts: typing.Union[MetaOapg.properties.alternative_hosts, str, schemas.Unset] = schemas.unset,
        alternative_hosts_email_notification: typing.Union[MetaOapg.properties.alternative_hosts_email_notification, bool, schemas.Unset] = schemas.unset,
        alternative_host_update_polls: typing.Union[MetaOapg.properties.alternative_host_update_polls, bool, schemas.Unset] = schemas.unset,
        approval_type: typing.Union[MetaOapg.properties.approval_type, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        approved_or_denied_countries_or_regions: typing.Union['MeetingsUpdateDetailsRequestSettingsApprovedOrDeniedCountriesOrRegions', schemas.Unset] = schemas.unset,
        audio: typing.Union[MetaOapg.properties.audio, str, schemas.Unset] = schemas.unset,
        audio_conference_info: typing.Union[MetaOapg.properties.audio_conference_info, str, schemas.Unset] = schemas.unset,
        authentication_domains: typing.Union[MetaOapg.properties.authentication_domains, str, schemas.Unset] = schemas.unset,
        authentication_exception: typing.Union['MeetingsUpdateDetailsRequestSettingsAuthenticationException', schemas.Unset] = schemas.unset,
        authentication_name: typing.Union[MetaOapg.properties.authentication_name, str, schemas.Unset] = schemas.unset,
        authentication_option: typing.Union[MetaOapg.properties.authentication_option, str, schemas.Unset] = schemas.unset,
        auto_recording: typing.Union[MetaOapg.properties.auto_recording, str, schemas.Unset] = schemas.unset,
        breakout_room: typing.Union['MeetingsUpdateDetailsRequestSettingsBreakoutRoom', schemas.Unset] = schemas.unset,
        calendar_type: typing.Union[MetaOapg.properties.calendar_type, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        close_registration: typing.Union[MetaOapg.properties.close_registration, bool, schemas.Unset] = schemas.unset,
        cn_meeting: typing.Union[MetaOapg.properties.cn_meeting, bool, schemas.Unset] = schemas.unset,
        contact_email: typing.Union[MetaOapg.properties.contact_email, str, schemas.Unset] = schemas.unset,
        contact_name: typing.Union[MetaOapg.properties.contact_name, str, schemas.Unset] = schemas.unset,
        custom_keys: typing.Union['MeetingsUpdateDetailsRequestSettingsCustomKeys', schemas.Unset] = schemas.unset,
        email_notification: typing.Union[MetaOapg.properties.email_notification, bool, schemas.Unset] = schemas.unset,
        encryption_type: typing.Union[MetaOapg.properties.encryption_type, str, schemas.Unset] = schemas.unset,
        enforce_login: typing.Union[MetaOapg.properties.enforce_login, bool, schemas.Unset] = schemas.unset,
        enforce_login_domains: typing.Union[MetaOapg.properties.enforce_login_domains, str, schemas.Unset] = schemas.unset,
        focus_mode: typing.Union[MetaOapg.properties.focus_mode, bool, schemas.Unset] = schemas.unset,
        global_dial_in_countries: typing.Union['MeetingsUpdateDetailsRequestSettingsGlobalDialInCountries', schemas.Unset] = schemas.unset,
        global_dial_in_numbers: typing.Union['MeetingsUpdateDetailsRequestSettingsGlobalDialInNumbers', schemas.Unset] = schemas.unset,
        host_video: typing.Union[MetaOapg.properties.host_video, bool, schemas.Unset] = schemas.unset,
        in_meeting: typing.Union[MetaOapg.properties.in_meeting, bool, schemas.Unset] = schemas.unset,
        jbh_time: typing.Union[MetaOapg.properties.jbh_time, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        join_before_host: typing.Union[MetaOapg.properties.join_before_host, bool, schemas.Unset] = schemas.unset,
        language_interpretation: typing.Union['MeetingsUpdateDetailsRequestSettingsLanguageInterpretation', schemas.Unset] = schemas.unset,
        sign_language_interpretation: typing.Union['MeetingsUpdateDetailsRequestSettingsSignLanguageInterpretation', schemas.Unset] = schemas.unset,
        meeting_authentication: typing.Union[MetaOapg.properties.meeting_authentication, bool, schemas.Unset] = schemas.unset,
        meeting_invitees: typing.Union['MeetingsUpdateDetailsRequestSettingsMeetingInvitees', schemas.Unset] = schemas.unset,
        mute_upon_entry: typing.Union[MetaOapg.properties.mute_upon_entry, bool, schemas.Unset] = schemas.unset,
        participant_video: typing.Union[MetaOapg.properties.participant_video, bool, schemas.Unset] = schemas.unset,
        private_meeting: typing.Union[MetaOapg.properties.private_meeting, bool, schemas.Unset] = schemas.unset,
        registrants_confirmation_email: typing.Union[MetaOapg.properties.registrants_confirmation_email, bool, schemas.Unset] = schemas.unset,
        registrants_email_notification: typing.Union[MetaOapg.properties.registrants_email_notification, bool, schemas.Unset] = schemas.unset,
        registration_type: typing.Union[MetaOapg.properties.registration_type, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        show_share_button: typing.Union[MetaOapg.properties.show_share_button, bool, schemas.Unset] = schemas.unset,
        use_pmi: typing.Union[MetaOapg.properties.use_pmi, bool, schemas.Unset] = schemas.unset,
        waiting_room: typing.Union[MetaOapg.properties.waiting_room, bool, schemas.Unset] = schemas.unset,
        watermark: typing.Union[MetaOapg.properties.watermark, bool, schemas.Unset] = schemas.unset,
        host_save_video_order: typing.Union[MetaOapg.properties.host_save_video_order, bool, schemas.Unset] = schemas.unset,
        internal_meeting: typing.Union[MetaOapg.properties.internal_meeting, bool, schemas.Unset] = schemas.unset,
        continuous_meeting_chat: typing.Union['MeetingsUpdateDetailsRequestSettingsContinuousMeetingChat', schemas.Unset] = schemas.unset,
        participant_focused_meeting: typing.Union[MetaOapg.properties.participant_focused_meeting, bool, schemas.Unset] = schemas.unset,
        resources: typing.Union['MeetingsUpdateDetailsRequestSettingsResources', schemas.Unset] = schemas.unset,
        auto_start_meeting_summary: typing.Union[MetaOapg.properties.auto_start_meeting_summary, bool, schemas.Unset] = schemas.unset,
        auto_start_ai_companion_questions: typing.Union[MetaOapg.properties.auto_start_ai_companion_questions, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MeetingsUpdateDetailsRequestSettings':
        return super().__new__(
            cls,
            *args,
            allow_multiple_devices=allow_multiple_devices,
            alternative_hosts=alternative_hosts,
            alternative_hosts_email_notification=alternative_hosts_email_notification,
            alternative_host_update_polls=alternative_host_update_polls,
            approval_type=approval_type,
            approved_or_denied_countries_or_regions=approved_or_denied_countries_or_regions,
            audio=audio,
            audio_conference_info=audio_conference_info,
            authentication_domains=authentication_domains,
            authentication_exception=authentication_exception,
            authentication_name=authentication_name,
            authentication_option=authentication_option,
            auto_recording=auto_recording,
            breakout_room=breakout_room,
            calendar_type=calendar_type,
            close_registration=close_registration,
            cn_meeting=cn_meeting,
            contact_email=contact_email,
            contact_name=contact_name,
            custom_keys=custom_keys,
            email_notification=email_notification,
            encryption_type=encryption_type,
            enforce_login=enforce_login,
            enforce_login_domains=enforce_login_domains,
            focus_mode=focus_mode,
            global_dial_in_countries=global_dial_in_countries,
            global_dial_in_numbers=global_dial_in_numbers,
            host_video=host_video,
            in_meeting=in_meeting,
            jbh_time=jbh_time,
            join_before_host=join_before_host,
            language_interpretation=language_interpretation,
            sign_language_interpretation=sign_language_interpretation,
            meeting_authentication=meeting_authentication,
            meeting_invitees=meeting_invitees,
            mute_upon_entry=mute_upon_entry,
            participant_video=participant_video,
            private_meeting=private_meeting,
            registrants_confirmation_email=registrants_confirmation_email,
            registrants_email_notification=registrants_email_notification,
            registration_type=registration_type,
            show_share_button=show_share_button,
            use_pmi=use_pmi,
            waiting_room=waiting_room,
            watermark=watermark,
            host_save_video_order=host_save_video_order,
            internal_meeting=internal_meeting,
            continuous_meeting_chat=continuous_meeting_chat,
            participant_focused_meeting=participant_focused_meeting,
            resources=resources,
            auto_start_meeting_summary=auto_start_meeting_summary,
            auto_start_ai_companion_questions=auto_start_ai_companion_questions,
            _configuration=_configuration,
            **kwargs,
        )

from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_approved_or_denied_countries_or_regions import MeetingsUpdateDetailsRequestSettingsApprovedOrDeniedCountriesOrRegions
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_authentication_exception import MeetingsUpdateDetailsRequestSettingsAuthenticationException
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_breakout_room import MeetingsUpdateDetailsRequestSettingsBreakoutRoom
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_continuous_meeting_chat import MeetingsUpdateDetailsRequestSettingsContinuousMeetingChat
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_custom_keys import MeetingsUpdateDetailsRequestSettingsCustomKeys
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_global_dial_in_countries import MeetingsUpdateDetailsRequestSettingsGlobalDialInCountries
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_global_dial_in_numbers import MeetingsUpdateDetailsRequestSettingsGlobalDialInNumbers
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_language_interpretation import MeetingsUpdateDetailsRequestSettingsLanguageInterpretation
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_meeting_invitees import MeetingsUpdateDetailsRequestSettingsMeetingInvitees
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_resources import MeetingsUpdateDetailsRequestSettingsResources
from zoom_meeting_python_sdk.model.meetings_update_details_request_settings_sign_language_interpretation import MeetingsUpdateDetailsRequestSettingsSignLanguageInterpretation
