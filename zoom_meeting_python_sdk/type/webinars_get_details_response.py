# coding: utf-8

"""
    Zoom Meeting API

    The Zoom Meeting APIs let developers to access information from Zoom. 

    The version of the OpenAPI document: 2
    Created by: https://developer.zoom.us/
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from zoom_meeting_python_sdk.type.webinars_get_details_response_occurrences import WebinarsGetDetailsResponseOccurrences
from zoom_meeting_python_sdk.type.webinars_get_details_response_recurrence import WebinarsGetDetailsResponseRecurrence
from zoom_meeting_python_sdk.type.webinars_get_details_response_settings import WebinarsGetDetailsResponseSettings
from zoom_meeting_python_sdk.type.webinars_get_details_response_tracking_fields import WebinarsGetDetailsResponseTrackingFields

class RequiredWebinarsGetDetailsResponse(TypedDict):
    pass

class OptionalWebinarsGetDetailsResponse(TypedDict, total=False):
    # Email address of the meeting host.
    host_email: str

    # ID of the user set as host of webinar.
    host_id: str

    # Webinar ID in **long** format(represented as int64 data type in JSON), also known as the webinar number.
    id: int

    # Unique webinar ID. Each webinar instance will generate its own webinar UUID. After a webinar ends, a new UUID is generated for the next instance of the webinar. Retrieve a list of UUIDs from past webinar instances using the [**List past webinar instances**](https://developers.zoom.us) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.  
    uuid: str

    # Webinar agenda.
    agenda: str

    # Create time.
    created_at: datetime

    # Webinar duration.
    duration: int

    # URL to join the webinar. Only share this URL with the users who should be invited to the webinar.
    join_url: str

    occurrences: WebinarsGetDetailsResponseOccurrences

    # Webinar passcode.   If **Require a passcode when scheduling new meetings** setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request.           **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements.         If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](https://developers.zoom.us) API or the [**Get account settings**](https://developers.zoom.us) API.
    password: str

    # Encrypted passcode for third party endpoints (H323/SIP).
    encrypted_passcode: str

    # H.323/SIP room system passcode.
    h323_passcode: str

    recurrence: WebinarsGetDetailsResponseRecurrence

    settings: WebinarsGetDetailsResponseSettings

    # Webinar start time in GMT/UTC.
    start_time: datetime

    #     The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar.   The expiration time for the `start_url` field listed in the response of the [**Create a webinar**](https://developers.zoom.us) API is two hours for all regular users.    For users created using the `custCreate` option via the [**Create users**](https://developers.zoom.us) API, the expiration time of the `start_url` field is 90 days.   For security reasons, to retrieve the latest value for the `start_url` field programmatically (after expiry), you must call the [**Get a webinar**](https://developers.zoom.us) API and refer to the value of the `start_url` field in the response.    
    start_url: str

    # Time zone to format `start_time`.
    timezone: str

    # Webinar topic.
    topic: str

    tracking_fields: WebinarsGetDetailsResponseTrackingFields

    # Webinar types.   `5` - Webinar.    `6` - Recurring webinar with no fixed time.    `9` - Recurring webinar with a fixed time.
    type: int

    # Whether the webinar is `simulive`.
    is_simulive: bool

    # The previously recorded file's ID for `simulive`.
    record_file_id: str

class WebinarsGetDetailsResponse(RequiredWebinarsGetDetailsResponse, OptionalWebinarsGetDetailsResponse):
    pass
